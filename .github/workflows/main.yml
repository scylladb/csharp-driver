name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        scylla-version: [ENTERPRISE-RELEASE, OSS-RELEASE]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: 'temurin'

      - name: Setup Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install get-version CLI
        run: |
          git clone https://github.com/scylladb-actions/get-version.git
          cd get-version
          go mod tidy
          go build -o get-version

      - name: Get scylla version
        id: scylla-version
        run: |
          cd get-version
          if [[ "${{ matrix.scylla-version }}" == "ENTERPRISE-RELEASE" ]]; then
            echo "SCYLLA_VERSION=release:$(./get-version --source dockerhub-imagetag --repo scylladb/scylla-enterprise -filters "^[0-9]{4}$.^[0-9]+$.^[0-9]+$ and LAST.LAST.LAST" | tr -d '\"')" >> $GITHUB_ENV
          elif [[ "${{ matrix.scylla-version }}" == "OSS-RELEASE" ]]; then
            echo "SCYLLA_VERSION=release:$(./get-version --source dockerhub-imagetag --repo scylladb/scylla -filters "^[0-9]$.^[0-9]+$.^[0-9]+$ and LAST.LAST.LAST" | tr -d '\"')" >> $GITHUB_ENV
          elif echo "${{ matrix.scylla-version }}" | grep -P '^[0-9\.]+'; then # If you want to run specific version do just that
            echo "SCYLLA_VERSION=release:${{ matrix.scylla-version }}" >> $GITHUB_ENV
          else
            echo "Unknown scylla version name `${{ matrix.scylla-version }}`"
            exit 1
          fi

      - name: Run dotnet format (checks formatting)
        run: make check

      - name: Restore SNK_KEY
        run: |
          echo "${{ secrets.SNK_KEY }}" | base64 --decode > build/datastax.snk
          echo "Key restored to build/datastax.snk"
          sn -p build/datastax.snk build/datastax.pub
          echo "Public key extracted to build/datastax.pub"
          sn -tp build/datastax.pub

      - name: Run unit tests
        run: make test-unit

      - name: Run integration tests on Scylla
        run: make test-integration-scylla

