name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - "docs/**"
      - .github/workflows/docs-pages.yml
      - .github/workflows/docs-pr.yml
      - .github/workflows/publish.yml
      - .gitignore
      - "*.md"
      - .gitignore
      - .gitattributes
      - "*.md"
      - "*.json"
      - NOTICE
      - doxyfile
      - .nav
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - "docs/**"
      - .github/workflows/docs-pages.yml
      - .github/workflows/docs-pr.yml
      - .github/workflows/publish.yml
      - .gitignore
      - .gitattributes
      - "*.md"
      - "*.json"
      - NOTICE
      - doxyfile
      - .nav
jobs:
  linting-and-basic-unit-tests:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: '9.0.x'

      - name: Run dotnet format (checks formatting)
        run: make check

      - name: Run unit tests
        run: TARGET_FRAMEWORK=net9 make test-unit

  integration-tests:
    needs: linting-and-basic-unit-tests
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - scylla-version: LTS-LATEST
            target-framework: net9
            dotnet-version: '9.0.x'
          - scylla-version: LTS-PRIOR
            target-framework: net8
            dotnet-version: '8.0.x'
          - scylla-version: LATEST
            target-framework: net7
            dotnet-version: '7.0.x'
          - scylla-version: PRIOR
            target-framework: net6
            dotnet-version: '6.0.x'
      fail-fast: false

    env:
      TARGET_FRAMEWORK: ${{ matrix.target-framework }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/.dotnet/tools
            ~/.local/share/NuGet/v3-cache
          key: ${{ runner.os }}-${{ matrix.dotnet-version }}-${{ hashFiles('**/*.sln','**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Set up JDK 8
        uses: actions/setup-java@v5
        with:
          java-version: 8
          distribution: 'temurin'

      - name: Setup Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install get-version CLI
        run: |
          git clone https://github.com/scylladb-actions/get-version.git
          cd get-version
          go mod tidy
          go build -o get-version

      - name: Get scylla version
        id: scylla-version
        run: |
          cd get-version
          if [[ "${{ matrix.scylla-version }}" == "LTS-LATEST" ]]; then
            echo "SCYLLA_VERSION=release:$(./get-version --source dockerhub-imagetag --repo scylladb/scylla -filters "^[0-9]{4}$.^[0-9]+$.^[0-9]+$ and LAST.1.LAST" | tr -d '\"')" >> $GITHUB_ENV
          elif [[ "${{ matrix.scylla-version }}" == "LTS-PRIOR" ]]; then
            SCYLLA_VERSION=$(./get-version --source dockerhub-imagetag --repo scylladb/scylla -filters "^[0-9]{4}$.^[0-9]+$.^[0-9]+$ and LAST-1.1.LAST" | tr -d '\"')
            [[ -z "$SCYLLA_VERSION" ]] && SCYLLA_VERSION=$(./get-version --source dockerhub-imagetag --repo scylladb/scylla-enterprise -filters "^[0-9]{4}$.^[0-9]+$.^[0-9]+$ and LAST-1.1.LAST" | tr -d '\"')
          elif [[ "${{ matrix.scylla-version }}" == "LATEST" ]]; then
            echo "SCYLLA_VERSION=release:$(./get-version --source dockerhub-imagetag --repo scylladb/scylla -filters "^[0-9]{4}$.^[0-9]+$.^[0-9]+$ and LAST.LAST.LAST" | tr -d '\"')" >> $GITHUB_ENV
          elif [[ "${{ matrix.scylla-version }}" == "PRIOR" ]]; then
            echo "SCYLLA_VERSION=release:$(./get-version --source dockerhub-imagetag --repo scylladb/scylla -filters "^[0-9]{4}$.^[0-9]+$.^[0-9]+$ and LAST.LAST.LAST-1" | tr -d '\"')" >> $GITHUB_ENV
          elif echo "${{ matrix.scylla-version }}" | grep -P '^[0-9\.]+'; then # If you want to run specific version do just that
            echo "SCYLLA_VERSION=release:${{ matrix.scylla-version }}" >> $GITHUB_ENV
          else
            echo "Unknown scylla version name `${{ matrix.scylla-version }}`"
            exit 1
          fi

      - name: Run unit tests
        run: make test-unit

      - name: Run integration tests on Scylla
        run: make test-integration-scylla

